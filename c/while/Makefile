CC=gcc
CXX=g++
RM=rm -f
CFLAGS=
CFLAGS_LINUX=$(CFLAGS)
CFLAGS_ANDROID=$(CFLAGS) -fPIE
CPPFLAGS=-g -O2
LDFLAGS=-g 
LDFLAGS_LINUX=$(LDFLAGS)
LDFLAGS_ANDROID=$(LDFLAGS) -pie
LDLIBS=

CMDSEP= &

ANDROID_AARCH64=android-aarch64
ANDROID_AARCH64_SUFFIX=-$(ANDROID_AARCH64)
LINUX_AMD64=linux-x86_64
LINUX_AARCH64=linux-aarch64
LINUX_AARCH64_SUFFIX=-$(LINUX_AARCH64)
LINUX_AMD64_SUFFIX=-$(LINUX_AMD64)
DC_ANDROID=../../scripts/dc$(ANDROID_AARCH64_SUFFIX)
DC_LINUX=../../scripts/dc$(LINUX_AARCH64_SUFFIX)
DC_LINUX_AMD64=../../scripts/dc$(LINUX_AMD64_SUFFIX)

DISASSEMBLE_PY=../../tools/c_disassemble.py

SRCS=example.c
BINARY=example
ANDROID_BINARY=$(BINARY)$(ANDROID_AARCH64_SUFFIX)
LINUX_BINARY=$(BINARY)$(LINUX_AARCH64_SUFFIX)
LINUX_AMD64_BINARY=$(BINARY)$(LINUX_AMD64_SUFFIX)
OBJS=$(subst .c,.o,$(SRCS))
BINARIES=$(LINUX_BINARY) $(ANDROID_BINARY) $(LINUX_AMD64_BINARY)
ASM_MD=*.markdown

all: $(ANDROID_AARCH64) $(LINUX_AARCH64) $(LINUX_AMD64) disas

android-aarch64:
	$(DC_ANDROID) bash -c '$$CC $(CFLAGS_ANDROID) $(LDFLAGS_ANDROID) $(SRCS) -o $(ANDROID_BINARY)'

linux-aarch64:
	$(DC_LINUX) bash -c '$$CC $(CFLAGS_LINUX) $(LDFLAGS_LINUX) $(SRCS) -o $(LINUX_BINARY)'

linux-x86_64:
	$(DC_LINUX_AMD64) bash -c '$$CC $(CFLAGS_LINUX) $(LDFLAGS_LINUX) $(SRCS) -o $(LINUX_AMD64_BINARY)'

disas:
#	python $(DISASSEMBLE_PY) $(CURDIR)/$(ANDROID_BINARY)
	$(foreach bin,$(BINARIES),python $(DISASSEMBLE_PY) $(CURDIR)/$(bin) $(CMDSEP))



depend: .depend

.depend: $(SRCS)
	$(RM) ./.depend
	$(CXX) $(CPPFLAGS) -MM $^>>./.depend;

clean:
	$(RM) $(OBJS)
	$(RM) $(BINARIES)	
	$(RM) $(ASM_MD)
distclean: clean
	$(RM) *~ .depend

include .depend
